= title "KittyPad - Developer"


=link_to "back", developer_page_path
%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %h3 SDK包总述
  %p
    我们的sdk包分为以下几种文件：
    %ol
      %li
        %strong The KittyPad SDK 的库文件
      %li
        %strong Bundled 文件 (里面包含各种显示的xib文件和用到的图片文件)
      %li
        %strong 使用的库
        %dl
          vendor目录下的4个库
          %dd a. TouchJSON
          %dd b. MPO autoconnection
          %dd c. ASI
          %dd d. reachability

%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %h3 工程集成 (XCode环境下)
  %p 
    %ol
      %li
        %strong 把kittypadsdk和vendor追加到项目的链接库中。
        %dl
          %dd a. from (Your Project)>Build Phases>Link Binaries With Libraries
          %dd b. click the "+" button on the lower left
          %dd c. select "libkittypadskd" from the KittyPad SDK package
      %li
        %strong 在link的Other Linker Flags里追加-all_load和-ObjC参数。
        %dl
          %dd  In (your project)>Build Phases>*Linking, add the value -all_load and -ObjC to *Other Linker Flags.

      %li
        %strong 把kittypadResources追加到项bundle Resource中。
        %dl
          %dd a. in (Your Project)>Build Phases>copy Bundle Resource
          %dd b. click the "+" button on the lower left
          %dd c. select the kittypadresource from the kittypad sdk package
      %li
        %strong 设定头文件的搜索路径
        %dl
          %dd In (your project)>Build Settings>SearchPaths>Header Search Paths的值为sdk的目录。
      %li
        %strong 确保以下的库在链接库中
        %ul
          %li Foundation
          %li UIKit
          %li CoreGraphics
          %li QuartzCore
          %li CoreData
          %li SystemCOnfiguration
          %li MobileCoreServices
          %li CFNetwork
          %li
            libz.dylib
            %dl
              to add a framework in XCode 4:
              %dd a. click your project icon in the project navigator
              %dd b. click on the target in the middle column
              %dd c. click on the Build Phases tab
              %dd d. open the Link Binary with Libraries section
              %dd e. click the "+" button on the lower left
              %dd f. select the framework from the alphabetical list
              %dd (XCode 3.22: add a framework by right clicking on your project and selecting Add>Existing Frameworks...)
      %li
        %strong 代码集成
        %dl
          %dd
            a. 在你的主XXXDelegate.m的FinishLaunching方法里设置初始化
            %dl
              %dd
                %hr
                %strong [Kittypad initializeWithPlist:@"kp_config" andDelegate:[[MyDelegate alloc]init]];
                %hr
              %dd
                第一个参数是指定的配置文件，里面有三个key，value值.
                %dl
                  %dd
                    app_key：键值                                      //在服务器上注册完程序后得到
                  %dd
                    app_secret：密钥                                  //在服务器上注册完程序后得到
                  %dd
                    server：http://m.kittypad.com/               //我们服务器的地址，请不要改动
                  %dd
                    第二个参数是程序结束的代理类，它有两种设置方式，如果为nil，那么使用默认的代理类, 否则自己实现那个KittypadDelegate协议，并实现里面的方法。
          %dd
            b. 在applicationWillResignActive方法里追加程序结束时的方法。
            %dl
              %dd
                %hr
                %strong [Kittypad shutdown];
                %hr
          %dd
            c. 根据自己的游戏方式，设置适合的支持旋转方式.
            %hr
            %dl
              %dd
                %strong= "#UIKit"
                %dl
                  %strong= "- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {"
                  %dd
                    %strong= "//portrait"
                  %dd
                    %strong= "return UIInterfaceOrientationIsPortrait(interfaceOrientation);"
                  %dd
                    %strong= "//landscape;"
                  %dd
                    %strong= "return UIInterfaceOrientationIsLandscape(interfaceOrientation);"
                  %dd
                    %strong= "}"
              %dd
                %strong= "#cocos2d"
              %dl
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationLandscapeLeft];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationLandscapeRight];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationPortrait];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationPortraitUpsideDown];"
                %hr
          %dd
            d.开启kittypad控制面板,可以在自作的按钮事件里调用。
            %dl
              %dd
                %hr
                %strong [Kittypad start];
                %hr
          %dd
            = "#以下为可选集成："
          %dd
            e.提交分数
            %dl
              %dd
                %hr
                %strong [Kittypad postScore:100];
                %hr
          %dd
            f.设置是否让用户必须注册为Kittypad用户
            %dl
              %dd
                %hr
                %strong [Kittypad setBackButtonHidden:NO];
                %hr
          %dd
            %p g.在休息暂停过程中，如果要让游戏同时暂停
            %p    需要实现KittypadBreakDelegate协议，
            %p   设置代理类
            %dl
              %dd
                %hr
                %strong [Kittypad setBreakDelegate:self];
              %dd
                实现下面的方法:
                %ul
                  %li (void)onPause
                  %li (void)onResume
                %hr
      %li
        %strong 具体的集成方法可以参考给出的sample程序。
