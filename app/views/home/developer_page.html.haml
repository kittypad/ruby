= title "KittyPad - Developer"

%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %ul{"data-role"=>"listview", "data-inset"=>"true", "data-theme"=>"d"}
    %li{"data-role"=>"list-divider", :role=>"heading"} Operate
    - unless developer_signed_in?
      %li= link_to "Developer Sign up", new_developer_registration_path
      %li= link_to "Developer Sign in", new_developer_session_path
    - else
      %li=link_to "Sign_out", quit_path, "data-ajax" => false

=link_to "SDK 集成过程(中文)", chinese_developer_page_path
%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %h3 Introduction to the SDK Package
  %p
    Our SDK package is divided into the following files:
    %ol
      %li
        %strong The KittyPad SDK Library
      %li
        %strong Bundled files (including demonstrations of xib files and image files)
      %li
        %strong Opensource
        %dl
          at the present stage this includes the following six files in the vendor catalog
          %dd a. TouchJSON
          %dd b. MPO autoconnection
          %dd c. ASI
          %dd d. reachability

%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %h3 Integrated Engineering (with XCode)
  %p 
    %ol
      %li
        %strong add kittypadsdk as a library
        %dl
          %dd a. from (Your Project)>Build Phases>Link Binaries With Libraries
          %dd b. click the "+" button on the lower left
          %dd c. select "libkittypadskd" from the KittyPad SDK package
      %li
        %strong in (your project)>Build Phases>Linking and add the value: -all_load and -ObjC to *Other Linker Flags.

      %li
        %strong correct kittypadResources configuration bundle in your project in XCode
        %dl
          %dd a. in (Your Project)>Build Phases>copy Bundle Resource
          %dd b. click the "+" button on the lower left
          %dd c. select the kittypadresource from the kittypad sdk package
      %li
        %strong import vendor
        %dl
          %dd a. solution 1: import the application under the non-existing vendor opensource
          %dd b. solution 2: quote "libvendor.a" and delete the source that is already with the item
      %li
        %strong make sure that the following frameworks are included in you Build Phases>Link Binaries with Libraries
        %ul
          %li Foundation
          %li UIKit
          %li CoreGraphics
          %li QuartzCore
          %li CoreData
          %li SystemCOnfiguration
          %li MobileCoreServices
          %li CFNetwork
          %li
            libz.dylib
            %dl
              to add a framework in XCode 4:
              %dd a. click your project icon in the project navigator
              %dd b. click on the target in the middle column
              %dd c. click on the Build Phases tab
              %dd d. open the Link Binary with Libraries section
              %dd e. click the "+" button on the lower left
              %dd f. select the framework from the alphabetical list
              %dd (XCode 3.22: add a framework by right clicking on your project and selecting Add>Existing Frameworks...)
      %li
        %strong Code Integration
        %dl
          %dd
            a. in your main page XXXDelegate.m Finish Launching set the initialization method
            %dl
              %dd
                %hr
                %strong [Kittypad initializeWithPlist:@"kp_config" andDelegate:[[MyDelegate alloc]init]];
                %hr
              %dd the first parameter be assigning allocation files, the second parameter is program end proxy classes the second parameter has two kinds of settings, if is it nil, then use the default prozy class, otherwise you won't be able to implement the Kittypad Delegate protocol.
          %dd
            b. in applicationWillResignActive add a method to transmit time information
            %dl
              %dd
                %hr
                %strong [Kittypad shutdown];
                %hr
          %dd
            c. according to your own game settings set up the appropriate rotation settings
            %hr
            %dl
              %dd
                %strong= "#UIKit"
                %dl
                  %strong= "- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {"
                  %dd
                    %strong= "//portrait"
                  %dd
                    %strong= "return UIInterfaceOrientationIsPortrait(interfaceOrientation);"
                  %dd
                    %strong= "//landscape;"
                  %dd
                    %strong= "return UIInterfaceOrientationIsLandscape(interfaceOrientation);"
                  %dd
                    %strong= "}"
              %dd
                %strong= "#cocos2d"
              %dl
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationLandscapeLeft];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationLandscapeRight];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationPortrait];"
                %dd
                  %strong= "[Kittypad setDashboardOrientation:UIInterfaceOrientationPortraitUpsideDown];"
                %hr
          %dd
            d.open the KittyPad control dashboard and adjust the event notification
            %dl
              %dd
                %hr
                %strong [Kittypad start];
                %hr
          %dd
            e.submit scores
            %dl
              %dd
                %hr
                %strong [Kittypad postScore:100];
                %hr
          %dd
            f.to set whether or not your uses must have a KittyPad account
            %dl
              %dd
                %hr
                %strong [Kittypad setBackButtonHidden:NO];
                %hr
          %dd
            %p g.setting up the control dashboard and rest time, as well as the optional pause and continue function
            %p   requires the KittypadBreakDelegate protocol
            %p   proxy setting
            %dl
              %dd
                %hr
                %strong [Kittypad setBreakDelegate:self];
              %dd
                use the following options
                %ul
                  %li (void)onPause
                  %li (void)onResume
                %hr
%div{"data-role"=>"collapsible", "data-collapsed"=>"false", "data-theme"=>"a"}
  %h3 for specific integration methods you can reference the sample program


